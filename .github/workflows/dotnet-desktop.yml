name: Build and Publish Native AOT Binaries

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: win-x64
            runner: windows-latest
          - platform: linux-x64
            runner: ubuntu-latest
          - platform: linux-arm64
            runner: ubuntu-latest
          - platform: osx-arm64
            runner: macos-latest
          - platform: osx-x64
            runner: macos-latest
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'  # Adjust as needed

      - name: Restore Dependencies
        run: dotnet restore

            # Windows build using PowerShell
      - name: Publish Native AOT Binary for Windows
        if: matrix.platform == 'win-x64'
        working-directory: ./Croco.CLI
        shell: pwsh
        run: |
          dotnet publish -c Release -r win-x64 `
            /p:PublishAot=true `
            /p:DebugType=None `
            /p:DebugSymbols=false `
            /p:IncludeNativeLibrariesForSelfExtract=true

      # Linux-arm64: Install cross-compilation dependencies
      - name: Install cross-compilation dependencies for linux-arm64
        if: matrix.platform == 'linux-arm64'
        run: |
          sudo dpkg --add-architecture arm64
          sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
          EOF'
          sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
          sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
          sudo apt update
          sudo apt install -y clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64
          
      # Linux-arm64 publish (after installing cross dependencies)
      - name: Publish Native AOT Binary for linux-arm64
        if: matrix.platform == 'linux-arm64'
        working-directory: ./Croco.CLI
        run: |
          dotnet publish -c Release -r linux-arm64 \
            /p:PublishAot=true \
            /p:DebugType=None \
            /p:DebugSymbols=false \
            /p:IncludeNativeLibrariesForSelfExtract=true \
            /p:NativeLinker=lld

      # Other non-Windows (linux-x64, osx-arm64, osx-x64) publish using Bash
      - name: Publish Native AOT Binary for non-linux-arm64 non-Windows
        if: matrix.platform != 'win-x64' && matrix.platform != 'linux-arm64'
        working-directory: ./Croco.CLI
        run: |
          dotnet publish -c Release -r ${{ matrix.platform }} \
            /p:PublishAot=true \
            /p:DebugType=None \
            /p:DebugSymbols=false \
            /p:IncludeNativeLibrariesForSelfExtract=true

      - name: Upload Artifact for ${{ matrix.platform }}
        uses: actions/upload-artifact@v4.6.1
        with:
          name: native-aot-${{ matrix.platform }}
          path: ./Croco.CLI/bin/Release/net9.0/${{ matrix.platform }}/publish/
